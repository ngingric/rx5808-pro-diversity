#include <avr/pgmspace.h>

#include "state_screensaver.h"

#include "receiver.h"
#include "channels.h"
#include "buttons.h"
#include "state.h"
#include "ui.h"

#include "pstr_helper.h"


static const unsigned char PROGMEM logo[] = {
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0xFF, 0xFF, 0xFB, 0xF8, 0x0F, 0xDF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xFB, 0xFC, 0x1F, 0xDF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF9, 0xFC, 0x1F, 0xDF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF9, 0xFE, 0x3F, 0x9F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0xFE, 0x3F, 0x9F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0xFF, 0x7F, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x03, 0xF8, 0x7F, 0x7F, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x03, 0xF8, 0x7F, 0xFE, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x03, 0xF8, 0x3F, 0xFE, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x03, 0xF8, 0x3F, 0xFC, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x03, 0xF8, 0x1F, 0xFC, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x03, 0xF8, 0x1F, 0xF8, 0x1F, 0x80, 0x00, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFF, 0xFF, 0xF8, 0x0F, 0xF8, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0x0F, 0xF0, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0x07, 0xF0, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0x07, 0xF0, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0x0F, 0xF0, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFF, 0xFF, 0xF8, 0x0F, 0xF8, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xF0, 0x0F, 0xDF, 0xFF, 0xFF,
    0xFD, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x7F, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x7F, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x3F, 0x80, 0x7E, 0x7E, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x3F, 0xC0, 0x7E, 0x7E, 0x00, 0x00, 0x3F, 0x7F, 0x01, 0xFB, 0xF0, 0x0F, 0xDF, 0xC0, 0x3F,
    0xFC, 0x1F, 0xC0, 0xFE, 0x7F, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x0F, 0xE0, 0xFE, 0x7F, 0x1F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x0F, 0xE1, 0xFC, 0x3F, 0x9F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x07, 0xF1, 0xFC, 0x3F, 0x9F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x07, 0xF3, 0xF8, 0x1F, 0xDF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0xFC, 0x03, 0xFB, 0xF8, 0x1F, 0xDF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


void StateMachine::ScreensaverStateHandler::onEnter() {
    showLogo = true;
}

void StateMachine::ScreensaverStateHandler::onUpdate() {
    if (this->displaySwapTimer.hasTicked()) {
        this->displaySwapTimer.reset();
        showLogo = !showLogo;

        Ui::needUpdate();
    }
}


void StateMachine::ScreensaverStateHandler::onButtonChange(
    Button button,
    Buttons::PressType pressType
) {
    StateMachine::switchState(StateMachine::lastState);
}


void StateMachine::ScreensaverStateHandler::onInitialDraw() {
    Ui::clear();

    if (showLogo)
    {
//        Ui::display.drawBitmap(
//            0,
//            0,
//            logo,
//            SCREEN_WIDTH,
//            SCREEN_HEIGHT,
//            WHITE
//        );
      Ui::display.setTextColor(WHITE);
      Ui::display.setTextSize(1);
      Ui::display.setCursor(0, 0);
      Ui::display.print(PSTR2("RSSI A: "));
      Ui::display.setCursor((CHAR_WIDTH + 1) * 8, 0);
      Ui::display.print(Receiver::rssiARaw);
      Ui::display.setCursor(0, CHAR_HEIGHT * 2);
      Ui::display.print(PSTR2("RSSI B: "));
      Ui::display.setCursor((CHAR_WIDTH + 1) * 8, CHAR_HEIGHT * 2);
      Ui::display.print(Receiver::rssiBRaw);
    }
    else
    {
      Ui::display.setTextColor(WHITE);
      Ui::display.setTextSize(1);
      Ui::display.setCursor(0, CHAR_HEIGHT);
      Ui::display.print(PSTR2("RSSI A: "));
      Ui::display.setCursor((CHAR_WIDTH + 1) * 8, CHAR_HEIGHT);
      Ui::display.print(Receiver::rssiARaw);
      Ui::display.setCursor(0, CHAR_HEIGHT * 3);
      Ui::display.print(PSTR2("RSSI B: "));
      Ui::display.setCursor((CHAR_WIDTH + 1) * 8, CHAR_HEIGHT * 3);
      Ui::display.print(Receiver::rssiBRaw);
    }

    Ui::needDisplay();
}

void StateMachine::ScreensaverStateHandler::onUpdateDraw() {
    this->onInitialDraw();
}
